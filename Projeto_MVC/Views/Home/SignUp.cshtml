@model Projeto_MVC.Models.UserModel

@{
    ViewData["Title"] = "Sign Up";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="text-align: center;">
    <img class="mb-4" src="https://static.vagas.com.br/portais-de-carreira/images/headers/original/fi-group-logo-com-a-escrita-em-azul.png?1653657031" alt="" width="120" height="57">
</div>
<div style="display: flex; justify-content: center; align-items: center;">
    <div style="width: 700px; background-color: #f5f5f5; border: 1px solid #ddd; border-radius: 10px; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <form asp-action="NewSignUp" method="post">
            <input class="form-control" asp-for="FullName" type="text" name="fullName" placeholder="Nome Completo" aria-label="default input example">
            <br />
            <input class="form-control" asp-for="CPF" type="text" name="cpf" placeholder="CPF" aria-label="default input example">
            <br />
            <input class="form-control" asp-for="BirthDate" type="date" name="birthDate" placeholder="Data de nascimento" aria-label="default input example">
            <br />
            <div class="mb-3 row">
                <label for="staticEmail" class="col-sm-2 col-form-label">Email</label>
                <div class="col-sm-10">
                    <input type="text" asp-for="UserEmail" class="form-control" name="username" id="staticEmail" placeholder="exemplo@fi-group.com" style="background-color: white; border: 1px solid lightgray; border-radius: 5px;">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="staticEmail" class="col-sm-2 col-form-label">Confirme seu Email</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="staticEmail" style="background-color: white; border: 1px solid lightgray; border-radius: 5px;">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="inputPassword" class="col-sm-2 col-form-label">Senha</label>
                <div class="col-sm-10">
                    <input type="password" asp-for="Password" class="form-control" name="password" id="inputPassword">
                </div>
            </div>
            <div class="mb-3 row">
                <label for="inputPassword" class="col-sm-2 col-form-label">Confirme sua Senha</label>
                <div class="col-sm-10">
                    <input type="password" class="form-control" id="inputPassword">
                </div>
            </div>

            <div style="text-align:center">
                <button class="btn btn-primary rounded-pill px-3;" type="submit">Criar Conta</button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Capturando os elementos
            const emailInput = document.querySelector('input[name="username"]');
            const confirmEmailInput = document.querySelectorAll('input[id="staticEmail"]')[1]; // Selecionando o segundo campo de email
            const senhaInput = document.querySelector('input[name="password"]');
            const confirmSenhaInput = document.querySelectorAll('input[id="inputPassword"]')[1]; // Selecionando o segundo campo de senha

            // Validação em tempo real do email
            confirmEmailInput.addEventListener("input", function () {
                if (emailInput.value !== confirmEmailInput.value) {
                    confirmEmailInput.setCustomValidity("Os emails não correspondem!");
                } else {
                    confirmEmailInput.setCustomValidity(""); // Remove mensagem de erro
                }
                confirmEmailInput.reportValidity(); // Exibe o erro na View
            });

            // Validação em tempo real da senha
            confirmSenhaInput.addEventListener("input", function () {
                if (senhaInput.value !== confirmSenhaInput.value) {
                    confirmSenhaInput.setCustomValidity("As senhas não correspondem!");
                } else {
                    confirmSenhaInput.setCustomValidity(""); // Remove mensagem de erro
                }
                confirmSenhaInput.reportValidity(); // Exibe o erro na View
            });
        });

            document.addEventListener("DOMContentLoaded", function () {
            const cpfInput = document.querySelector('input[name="cpf"]'); // Captura o campo de CPF

            // Validação em tempo real do CPF
            cpfInput.addEventListener("input", function () {
                const cpfValue = cpfInput.value;

                // Remove caracteres não numéricos (opcional)
                cpfInput.value = cpfValue.replace(/\D/g, '');

                // Verifica se o CPF tem mais de 11 dígitos
                if (cpfInput.value.length > 11) {
                    cpfInput.setCustomValidity("O CPF não pode ter mais de 11 dígitos!");
                } else {
                    cpfInput.setCustomValidity(""); // Remove mensagem de erro
                }

                // Exibe a mensagem de erro no campo
                cpfInput.reportValidity();
            });
        });

    </script>

</div>